steps:
  # Build the ML retention API Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'api/Dockerfile', '-t', 'gcr.io/$PROJECT_ID/thai-talent-ml-api:latest', '.']
    
  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/thai-talent-ml-api:latest']

  # Grant Cloud Run service account access to GCS bucket
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'projects'
      - 'add-iam-policy-binding'
      - '$PROJECT_ID'
      - '--member=serviceAccount:$_SERVICE_ACCOUNT'
      - '--role=roles/storage.objectViewer'

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'thai-talent-ml-api'
      - '--image=gcr.io/$PROJECT_ID/thai-talent-ml-api:latest'
      - '--platform=managed'
      - '--region=asia-southeast1'
      - '--allow-unauthenticated'
      - '--memory=4Gi'
      - '--cpu=2'
      - '--timeout=1800'
      - '--concurrency=10'
      - '--set-env-vars=GCS_DATE_PARTITION=2025-09-05'

  # Allow public access to the service
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'thai-talent-ml-api'
      - '--region=asia-southeast1'
      - '--member=allUsers'
      - '--role=roles/run.invoker'

substitutions:
  _SERVICE_ACCOUNT: 'storage-sa@th-ai-talent-wow.iam.gserviceaccount.com'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'